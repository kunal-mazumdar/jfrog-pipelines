# TODOs:
# - Validate required values 

{{ $GIT_RESOURCE_NAME := .values.metadata.namePrefix + 'git_source' }}

valuesFilePath: values.yml

resources:
  - name: {{ $GIT_RESOURCE_NAME }}
    type: GitRepo
    configuration:
      path: kunal-mazumdar/jfrog-pipelines
      gitProvider: kunal_gh
      branches:
        include: main

  - name: frogbot_scan_result
    type: PropertyBag
    configuration:
      timestamp: ''
      reportUrl: ''

  - name: code_quality_result
    type: PropertyBag
    configuration:
      timestamp: ''
      reportUrl: ''
  
  - name: unit_test_result
    type: PropertyBag
    configuration:
      timestamp: ''
      status: ''

  - name: build_result
    type: PropertyBag
    configuration:
      timestamp: ''
      lintStatus: ''
      buildStatus: ''
      publishStatus: ''
  
  - name: java_test_app_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: myArt
      buildName: java_test_app
      buildNumber: ${run_id}

pipelines:
  - name: java_template_pipeline
    configuration:      
      environmentVariables:
        readOnly:
          ENABLE_DEBUG_LOGS: 'false'
          SKIP_FROGBOT_SCAN: 'false'
    steps:
      - name: frogbot_scan
        type: Bash
        configuration:
          inputResources:
            - name: {{ $GIT_RESOURCE_NAME }}
          outputResources:
            - name: frogbot_scan_result
        execution:          
          onExecute:
            - echo 'Executing Frogbot scan...'

      - name: code_quality
        type: Bash
        configuration:
          inputSteps:
            - name: frogbot_scan
          inputResources:
            - name: {{ $GIT_RESOURCE_NAME }}        
          outputResources:
            - name: code_quality_result
        execution:          
          onExecute:
            - echo 'Executing sonar...'

      - name: unit_tests
        type: Bash
        configuration:
          inputSteps:
            - name: frogbot_scan
          inputResources:
            - name: {{ $GIT_RESOURCE_NAME }}  
          outputResources:
            - name: unit_test_result
        execution:          
          onExecute:
            - echo 'Linting...'

      - name: lint
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: frogbot_scan
          inputResources:
            - name: {{ $GIT_RESOURCE_NAME }}  
          outputResources:
            - name: build_result
        execution:          
          onExecute:
            - echo 'Linting...'

      - name: build
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: lint
              status:
                - success
          outputResources:
            - name: build_result
        execution:
          onExecute:
            - echo 'Building...'

      - name: publish
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: build
              status:
                - success
          outputResources:
            - name: build_result
            - name: java_test_app_build_info
        execution:
          onExecute:
            - echo 'Publising...'
