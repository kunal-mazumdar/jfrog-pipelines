# [Required]
metadata:
  
  # [Required] All the underlying pipelines & resources names will be prefixed with appName for easy identifications & search
  appName:  dream_app_homepage

  java:

# [Required]
inputs:

  # [Required] Configure Git repository where application code is present
  sourceRepository:
    # ... Support all the Git Resource configuration properties ...
    # https://jfrog.com/help/r/jfrog-pipelines-documentation/gitrepo
    path: kunal-mazumdar/simple-java-maven-app
    gitProvider: kunal_gh
    branches:
      include: master

  # [Required]
  integrations:
    
    # [Required] Artifactory access token to configure Jfrog CLI
    artifactoryToken: jf_token

# [Required]
configurations:

  # [Optional] Defaults to Maven
  buildTool: 'Maven/Gradle/Other'

  # [Optional] Defaults to repository root folder
  sourceDirectory: '.'

  # [Optional] When buildTool = Maven/Gradle
  # [Required] When buildTool = Other
  steps:

#    lint:
#
#      # [Maven] Default to plugin: maven-checkstyle-plugin
#      commands:
#        - 'mvn clean checkstyle:checkstyle'
#
#      # [Gradle]
#      # commands:
#      #  -  './gradlew lint'
#
#      # [Optional] Default to false
#      skip: false

    test:

      # [Maven] Default to plugin: maven-surefire-plugin
      commands:
        - 'mvn clean'
        - 'mvn test'

      # [Gradle]
      # commands:
      #  - './gradlew test'

      # [Optional] Default to false
      skip: false

    build:

      # [Maven] Default to plugin: maven-compiler-plugin
      commands: 
        - 'mvn -Dmaven.test.skip=true install'
      
      # [Gradle]
      # commands: 
      #  - './gradlew clean build -x test'

      # [Optional] Default to false
      skip: false

    publish:

      # [Maven] Default to plugin: maven-deploy-plugin
      commands:
        - 'mvn deploy'
      
      # [Gradle]
      # commands:
      #  - './gradlew deploy'
      
      # [Optional] Default to false
      skip: false

controls:
  
  # [Optional] Feature to control the pipeline trigger options, defaults to `sourceRepository`
  # Whole pipeline from frogbot-scan will be triggered
  triggerBy:
    
    # Connected source Git repository change [Defaults to true]
    sourceRepository: true
    
    # Other resource change from other pipelines
    # externalResources:
    #   - resourceName: dream_app_commons_build_result
    
    # Automated periodic triggers (Typical use case: Nightly builds)
    # cron:
    #   enabled: true # Defaults to false
    #   expression: "*/3 * * * *" # No defaults, mandatory to provide when cron.enabled is set to true

    # Incoming webhook
    # incomingWebhooks:
    #   - webhookName: 'testWebhook' # IncommingWebhook integration name


  # [Optional]
  logging:

    # [Optional] Defaults to false
    enableDebug: true

  # [Optional] Exporting important files during run as RUN FILES
  exporting:

    # [Optional] Defaults to false
    enabled: true

  # [Optional] Enable notifications
  notifications:
    email:
      integrationName: 'mySMTP' # SMTP

      # [Optional] Defaults to all the steps
      steps:
        - frogbot-scan
        - lint
        - test
        - build
        - deploy

    slack:
      integrationName: 'mySlack'

      # [Optional] Defaults to all the steps
      steps:
        - frogbot-scan
        - lint
        - test
        - build
        - deploy